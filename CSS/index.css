/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 62.5%;
  /* This is about 10px and from here Rems can be calculated easily: 2.4rem = 24px AND it scales to the browser, making it responsive */
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* Set every element's box-sizing to border-box */
* {
  box-sizing: border-box;
}
/* Set all text to Roboto w/CSS import on HTML Page */
html,
body {
  height: 100%;
  font-family: 'Roboto', sans-serif;
}
h1,
h2,
h3,
h4,
h5 {
  font-family: 'Roboto', sans-serif;
  letter-spacing: 1px;
  margin-bottom: 15px;
  color: #339EF9;
}
button {
  font-family: 'Roboto', sans-serif;
}
/* Color Assignments */
/* It seems like these should be assigned last, once I see how every color
 is related to each object*/
/* Colors, taken from UX Design File*/
/* Escapes */
nav {
  display: inline-flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
  box-shadow: 0 0.1rem 0.1rem #f7f7f7;
  background: white;
}
nav a {
  text-decoration: none;
  font-size: 1.2rem;
  font-weight: medium;
  color: #339EF9;
  padding: 0.6rem 1.2rem;
}
.nav-wrapper {
  padding-bottom: 2.4rem;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}
article {
  margin-left: 12.5%;
}
article p {
  color: #4E4E4E;
  font-size: 1rem;
}
article h1 {
  font-size: 2.1rem;
}
article h2 {
  font-size: 1.4rem;
}
article h1,
article h2,
article h3,
article h4,
article h5 {
  font-weight: 550;
  color: #339EF9;
  margin-bottom: 0.1rem;
}
.intro {
  margin-bottom: 1.1rem;
}
.intro p {
  font-size: 1.2rem;
  width: 83%;
}
.feature {
  width: 75%;
}
.feature p {
  padding-bottom: 1.1rem;
}
.feature h2 {
  padding-bottom: 1rem;
}
.banner-wrapper {
  max-width: 100%;
  overflow: hidden;
  text-indent: -10%;
}
.banner-img {
  max-width: 115%;
}
@media (min-width: 600px) {
  .banner-wrapper {
    display: flex;
    justify-content: center;
  }
}
/* Not the smoothest transition but now the image will stay center 
once it passes pay.svg's width. Now all I want is to maintain the image's cropping
past 600px, which I think would require a wrapper outside of banner-wrapper, which to 
me just seems sloppy.

Need to let go of this and move on to the desktop width */
.cta-wrapper {
  display: flex;
  justify-content: center;
}
button {
  font-size: 2rem;
  font-weight: semi-bold;
  text-align: center;
  border-radius: 50%;
  width: 143px;
  height: 143px;
  padding: 1.3rem 0;
  border: 1px solid transparent;
  box-shadow: 0 0.3rem 0.3rem #f7f7f7;
  padding-bottom: 0.5rem;
  align-self: center;
  justify-self: center;
  position: relative;
}
.white {
  background: white;
  color: #339EF9;
  bottom: 2rem;
}
.blue {
  background: linear-gradient(136deg, #6BD6FA, #3A7AE7);
  color: white;
  position: static;
  margin-bottom: 3rem;
  margin-top: 2.5rem;
}
